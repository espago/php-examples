<?php
// Example code that receives back_requests from Espago in APIv3.0 json format,
// particularly usefull with Espago APIv3.0 with 3D-Secure.
//
//Code is published "as is" without any warranty of any kind,
//express or implied, as to the operation of this script.
//You may (and you sholud) improve this code in a way
//that ensures the correctness and security of data on your website.
//Last change: 2016-06-27

// To receive back_requests you should put this script on your server,
// and type it's address in field "Back Request URL",
// You should also set on Espago web panel USER, PASSWORD
// and backrequest version (APIv2.0 or APIv3.0)


/** Loads the config file */
require( dirname( __FILE__ ) . '/espago-config.php' );
//addres to e'mail notification for DEBUG purposes
$to = '$email_notification';

// Your authehtication data for backrequest (not API!), you should set them in Espago www panel
// USER - login BasicAuth for back requests
// PASSWORD - password BasicAuth for back requests
define('USER', 'UserSetWEspago');
define('PASSWORD', 'PasswordWEspago');

//error codes in XML, you can use EN, PL or FR language
//in most cases you will prefer mysql for storing error codes
//if you want change language use different file and object id (erren/errpl/errfr)
$xmlerrorcodes = 'erren.xml';

// Initial values
$LoginSuccessful = false;

//Set Basic Authentication
if (isset($_SERVER['PHP_AUTH_USER']) && isset($_SERVER['PHP_AUTH_PW'])){

    $Username = $_SERVER['PHP_AUTH_USER'];
    $Password = $_SERVER['PHP_AUTH_PW'];

    if ($Username == USER && $Password == PASSWORD){
        $LoginSuccessful = true;
    }
}


//  Checking if request is authenticated
if (!$LoginSuccessful){
    header('WWW-Authenticate: Basic realm="Authorization"');
    header('HTTP/1.0 401 Unauthorized');
    }
else {

// Get data from back_request in APIv3.0
    $rawdata = file_get_contents("php://input");
    $array = json_decode($rawdata,true);
    $payment_id = $array['id'];
    $state = $array['state'];
    $amount = $array['amount'];
    $currency = $array['currency'];
    //$created_at = $array['created_at'];
    $created_at_date = gmdate("Y-m-d H:i:s", $array['created_at']);
    $issuer_response_code = $array['issuer_response_code'];
    $client_id = $array['client']; //if client profile is used
    //Some parameters used in recurring payment
    //$subscription_id = $array['subscription'];
    //$invoice_id = $array['id'];
    //$paid = $array['paid'];
    //$next_payment_attempt = $array['next_payent_attempt'];

    // returen HTML code 200 - confirmation to Espago about succesfully receive back_request
    // you can make condition if data is received and stored in database
    header('HTTP/1.0 200 Ok');

    // Getting error explanation from XML file
    // If XML file exists AND IF item is not paid
    $err_short = "For getting explanaition of reject reason " . $issuer_response_code . " you need set xmlerrorcodes in your code.";
    $err_long = $err_short;
    if (file_exists($xmlerrorcodes)) {
       if ($state == 'rejected') {
        $errorcodes = simplexml_load_file($xmlerrorcodes);
        $error_xml = $errorcodes->xpath("/errorcodes/erren[err_id=$issuer_response_code]");
        //$error_xml = $errorcodes->xpath("/errorcodes/errpl[err_id=$error_code]");

        foreach($error_xml as $error_this) {
        $err_short = $error_this->err_short;
            $err_long = $error_this->err_long;
            }
    //print "$err_short \n<br>"; //DEBUG
        //print "$err_long \n<br>";  //DEBUG
        }
    }

    // You should store or update information in your database using $payment_id,$state, $client_id and more if you want
    // Optionally you can add mailing notification; it may be needed to additional server configuration to send e-mails
    $subject = "New payment information: " . $payment_id;
    $message .= "Message generated by receiving back_request.";
    $message .= "Payment: " . $payment_id;
    $message .= "\nAmount: " . $amount . " " . $currency;
    $message .= "\nTime of transaction: " . $created_at_date;
    $message .= "\nClient ID: " . $client_id;
    //$message = "\nSubscription ID: " . $subscription_id;
    //$message .= "\nInvoice ID: " . $invoice_id;
    $message .= "\n";

    if ($state == 'executed') {
    $message .= "\nTransaction was successful.";
    } elseif($state == 'rejected'){
    $message .= "\nTransaction was rejected by bank with error code" . $issuer_response_code;
        $message .= "\nReject reason: ".$err_short;
        $message .= "\nReject reason: ".$err_long;
     }
    else{
    $message .= "\nTransaction was failed due to an error.";
     }

    $message .= "\n";
    $message .= "\nRawdata: " . $rawdata;  // DEBUG
    $message .= "\n";

    $headers = 'From: paymentespago@example.com' . "\r\n" .
      'X-Mailer: PHP/' . phpversion();

   // Send mail notification
   mail($to, $subject, $message, $headers);

   // FOR DEBUG save data into local file
   file_put_contents("backrequest.log", $message, FILE_APPEND);

}
?>
